<!--
/**** Git Credential Manager for Windows ****
 *
 * Copyright (c) Atlassian
 * All rights reserved.
 *
 * MIT License
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the """"Software""""), to deal
 * in the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
**/
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:markup="http://schemas.kent.boogaart.com/converters">

    <!--
    Colors

    https://design.atlassian.com/product/foundations/colors/
    -->
    <SolidColorBrush x:Key="White" Color="#ffffff" />

    <!-- ADG https://design.atlassian.com/brand/colors/ Primary -->
    <SolidColorBrush x:Key="Navy" Color="#205081" />
    <SolidColorBrush x:Key="LightGray" Color="#f5f5f5" />
    <SolidColorBrush x:Key="Charcoal" Color="#333333" />
    <SolidColorBrush x:Key="Blue" Color="#3572b0" />
    <SolidColorBrush x:Key="PaleBlue" Color="#ebf2f9" />
    <SolidColorBrush x:Key="MediumGray" Color="#707070" />
    <SolidColorBrush x:Key="Green" Color="#14892c" />
    <SolidColorBrush x:Key="Yellow" Color="#f6c342" />
    <SolidColorBrush x:Key="Red" Color="#d04437" />

    <!-- ADG https://design.atlassian.com/brand/colors/ Secondary -->
    <SolidColorBrush x:Key="Gray" Color="#999999" />
    <SolidColorBrush x:Key="AshGray" Color="#cccccc" />
    <SolidColorBrush x:Key="Silver" Color="#e9e9e9" />
    <SolidColorBrush x:Key="Brown" Color="#815b3a" />
    <SolidColorBrush x:Key="CheetoOrange" Color="#f79232" />
    <SolidColorBrush x:Key="Tan" Color="#f1a257" />
    <SolidColorBrush x:Key="LightBrown" Color="#d39c3f" />
    <SolidColorBrush x:Key="Cyan" Color="#59afe1" />
    <SolidColorBrush x:Key="Slate" Color="#4a6785" />
    <SolidColorBrush x:Key="CoolBlue" Color="#84bbc6" />
    <SolidColorBrush x:Key="LimeGreen" Color="#8eb021" />
    <SolidColorBrush x:Key="MidGreen" Color="#67ab49" />
    <SolidColorBrush x:Key="Violet" Color="#654982" />
    <SolidColorBrush x:Key="Mauve" Color="#ac707a" />
    <SolidColorBrush x:Key="BrightPink" Color="#f15c75" />
    <SolidColorBrush x:Key="Rosie" Color="#f691b2" />

    <!-- ADG https://design.atlassian.com/brand/colors/ Derivative -->
    <SolidColorBrush x:Key="PaleBlueDerivative" Color="#ccd9ea" />
    <SolidColorBrush x:Key="BrightBlueDerivative" Color="#1a8cff" />
    <SolidColorBrush x:Key="DarkBrown" Color="#594300" />

    <!-- Win10 Desktop Theme -->
    <SolidColorBrush x:Key="HighlightActiveBorderBlue" Color="#0078D7" />
    <SolidColorBrush x:Key="HighlightPressedBorderBlue" Color="#005499" />
    <SolidColorBrush x:Key="HighlightPressedBackgroundBlue" Color="#CCE4F7" />

    <!--
    Typography

    https://design.atlassian.com/product/foundations/typography/
    -->

    <!--
    Base styles set basic font attributes
    Need multiple ones as not all controls derive from the same base classes
    -->

    <Style x:Key="BaseTextElement" TargetType="{x:Type TextElement}">
        <!--<Setter Property="Control.FontFamily" Value="Verdana" />-->
        <Setter Property="Foreground" Value="{StaticResource Charcoal}" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style x:Key="BaseTextBlock" TargetType="{x:Type TextBlock}">
        <!--<Setter Property="Control.FontFamily" Value="Verdana" />-->
        <Setter Property="Foreground" Value="{StaticResource Charcoal}" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style x:Key="BasePanel" TargetType="{x:Type Panel}" />

    <Style x:Key="BaseControl" TargetType="{x:Type Control}">
        <!--<Setter Property="Control.FontFamily" Value="Verdana" />-->
        <Setter Property="Foreground" Value="{StaticResource Charcoal}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="BorderBrush" Value="{StaticResource MediumGray}" />
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Background" Value="{StaticResource White}" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Margin" Value="0 4 0 4" />
    </Style>

    <!--
    Typography - TextBlock
    -->
    <Style x:Key="Paragraph" TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource BaseTextBlock}" />

    <Style x:Key="ParagraphBold" TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource Paragraph}">
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style x:Key="ParagraphItalic" TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource Paragraph}">
        <Setter Property="FontStyle" Value="Italic" />
    </Style>

    <Style x:Key="ParagraphSmall" TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource Paragraph}">
        <Setter Property="FontSize" Value="12" />
    </Style>

    <Style x:Key="ParagraphBoldSmall" TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource ParagraphSmall}">
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style x:Key="ParagraphItalicSmall" TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource ParagraphSmall}">
        <Setter Property="FontStyle" Value="Italic" />
    </Style>

    <Style x:Key="PageTitle" TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource Paragraph}">
        <Setter Property="FontSize" Value="32" />
        <Setter Property="Margin" Value="0,0,0,16" />
    </Style>

    <Style x:Key="Heading" TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource PageTitle}">
        <Setter Property="FontSize" Value="20" />
    </Style>

    <Style x:Key="ThirdLevelHeading" TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource PageTitle}">
        <Setter Property="FontSize" Value="24" />
    </Style>

    <Style x:Key="FourthLevelHeading" TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource PageTitle}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style x:Key="FifthLevelHeading" TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource FourthLevelHeading}">
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style x:Key="SixthLevelHeading" TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource FourthLevelHeading}">
        <Setter Property="FontSize" Value="12" />
        <!-- TODO should be uppercase too -->
    </Style>

    <Style x:Key="LinkRun" TargetType="{x:Type Run}"
           BasedOn="{StaticResource BaseTextElement}">
        <Setter Property="Foreground" Value="{StaticResource Cyan}" />
        <Setter Property="TextBlock.TextDecorations" Value="{x:Null}" />
    </Style>

    <Style x:Key="Hyperlink" TargetType="{x:Type Hyperlink}"
           BasedOn="{StaticResource BaseTextElement}">
        <Setter Property="Foreground" Value="{StaticResource Cyan}" />
        <Setter Property="TextBlock.TextDecorations" Value="{x:Null}" />
    </Style>

    <!--
    Windows
    -->

    <Style x:Key="Base" TargetType="{x:Type ContentControl}">
        <Setter Property="Background" Value="{StaticResource LightGray}" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style x:Key="Window" TargetType="{x:Type Window}"
           BasedOn="{StaticResource Base}">
        <Setter Property="WindowStyle" Value="SingleBorderWindow" />
        <Setter Property="UseLayoutRounding" Value="True" />
    </Style>

    <Style x:Key="Dialog" TargetType="{x:Type Window}"
           BasedOn="{StaticResource Window}">
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="SizeToContent" Value="WidthAndHeight" />
    </Style>

    <!--
    Containers
    -->
    <Style x:Key="MainPanel" TargetType="DockPanel">
        <Setter Property="Background" Value="{StaticResource White}" />
    </Style>

    <Style x:Key="AccentPanel" TargetType="DockPanel">
        <Setter Property="Background" Value="{StaticResource Navy}" />
    </Style>

    <Style x:Key="ContrastPanel" TargetType="DockPanel">
        <Setter Property="Background" Value="{StaticResource LightGray}" />
    </Style>

    <!--
    Controls
    -->
    <Style
        x:Key="ButtonFocusVisual">
        <Setter
            Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeThickness="1" StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MetroButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseControl}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Background" Value="#E1E1E1" />
        <Setter Property="BorderBrush" Value="#ADADAD" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="10 5" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1,1,1,1">
                        <ContentPresenter
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          Margin="{TemplateBinding Padding}"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource HighlightPressedBackgroundBlue}" />
                            <Setter Property="BorderBrush" Value="{StaticResource HighlightPressedBorderBlue}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#E5F1FB" />
                            <Setter Property="BorderBrush" Value="{StaticResource HighlightActiveBorderBlue}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#838383" />
                            <Setter Property="Background" Value="#CCCCCC" />
                            <Setter Property="BorderBrush" Value="#BFBFBF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FlatButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MetroButton}">
        <Setter Property="Padding" Value="20,0,20,0" />
        <Setter Property="Margin" Value="10,4,10,4" />
    </Style>

    <Style x:Key="PrimaryButton" TargetType="{x:Type Button}" BasedOn="{StaticResource FlatButton}">
        <Setter Property="IsDefault" Value="True" />
        <Setter Property="Background" Value="{StaticResource Blue}" />
        <Setter Property="Foreground" Value="{StaticResource White}" />
    </Style>

    <Style x:Key="SecondaryButton" TargetType="{x:Type Button}"
           BasedOn="{StaticResource FlatButton}">
        <Setter Property="BorderBrush" Value="{StaticResource Charcoal}" />
        <Setter Property="IsDefault" Value="false" />
    </Style>

    <Style x:Key="AncilliaryButton" TargetType="{x:Type Button}"
           BasedOn="{StaticResource SecondaryButton}">
    </Style>

    <Style x:Key="ProgressBar" TargetType="{x:Type ProgressBar}">
        <Setter Property="Background" Value="{StaticResource Silver}" />
        <Setter Property="Foreground" Value="{StaticResource Navy}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MaxHeight" Value="5" />
    </Style>

    <!-- Checkbox -->
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border" Width="13" Height="13" CornerRadius="0" Background="White"
                                    BorderThickness="1" BorderBrush="#333333">
                                <Polyline Points="1,5 4,8 10,2" Stroke="#333333" x:Name="CheckMark"  SnapsToDevicePixels="True"
                                          Width="11" Height="11" StrokeThickness="1" />
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckMark" Property="Points" Value="2,3 9,3 9,9 2,9" />
                            <Setter TargetName="CheckMark" Property="Fill" Value="#333333" />
                            <Setter TargetName="CheckMark" Property="RenderOptions.EdgeMode" Value="Aliased" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="#E5F1FB" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource HighlightActiveBorderBlue}" />
                            <Setter TargetName="CheckMark" Property="Stroke" Value="{StaticResource HighlightActiveBorderBlue}" />
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource HighlightPressedBackgroundBlue}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource HighlightPressedBorderBlue}" />
                            <Setter TargetName="CheckMark" Property="Stroke" Value="{StaticResource HighlightPressedBorderBlue}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#CCCCCC" />
                            <Setter Property="Foreground" Value="#CCCCCC" />
                            <Setter TargetName="CheckMark" Property="Stroke" Value="#CCCCCC" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
            Form Fields
            -->
    <Style x:Key="Label" TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource BaseTextBlock}">
        <!--<Setter Property="FontSize" Value="12" />-->
        <Setter Property="Margin" Value="0 4 13 4" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="TextBox" TargetType="{x:Type TextBox}"
           BasedOn="{StaticResource BaseControl}">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="PasswordBox" TargetType="{x:Type PasswordBox}"
           BasedOn="{StaticResource BaseControl}">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="CheckBox" TargetType="{x:Type CheckBox}"
           BasedOn="{StaticResource BaseControl}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style x:Key="ComboBox" TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource BaseControl}">
        <!--<Setter Property="FontSize" Value="12" />-->
    </Style>

    <!-- Close button on dialogs -->
    <Style x:Key="WindowCloseIcon" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter>
                            <ContentPresenter.Content>
                                <Image Source="/SourceTree.UI.Theme.Wpf;Component/Icons/Onboarding/close@1x.png"
                                       Width="10" Height="10" />
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource Red}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
    Images
    -->
    <Style x:Key="Image" TargetType="{x:Type Image}">
        <Setter Property="Stretch" Value="None" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <!--
    Data Grid Column Headers
    -->
    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="BorderBrush" Value="#E5E5E5" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Foreground" Value="#FF000000" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Border x:Name="HeaderBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,0,1" Background="{TemplateBinding Background}">
                        <Grid Name="Root">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SortStates">
                                    <VisualState x:Name="Unsorted" />
                                    <VisualState x:Name="SortAscending">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Opacity" Duration="0" To="1.0" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SortDescending">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Opacity" Duration="0" To="1.0" />
                                            <DoubleAnimation Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="(RenderTransform).ScaleY" Duration="0" To="-.9" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                      Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <ContentPresenter Content="{TemplateBinding Content}" />

                                <Path Grid.Column="1" Name="SortIcon" Fill="#FF444444" RenderTransformOrigin=".5,.5" HorizontalAlignment="Left"
                        VerticalAlignment="Center" Opacity="0" Stretch="Uniform" Width="8" Margin="4,0,0,0" Data="F1 M -5.215,6.099L 5.215,6.099L 0,0L -5.215,6.099 Z ">
                                    <Path.RenderTransform>
                                        <ScaleTransform ScaleX=".9" ScaleY=".9" />
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>

                            <Thumb x:Name="PART_LeftHeaderGripper" Visibility="{TemplateBinding SeparatorVisibility}"
                    Style="{DynamicResource GridViewColumnHeaderGripper}" Cursor="SizeWE" HorizontalAlignment="Left" Margin="-9,0,0,0" />

                            <Thumb x:Name="PART_RightHeaderGripper" Visibility="{TemplateBinding SeparatorVisibility}"
                    Style="{DynamicResource GridViewColumnHeaderGripper}" Cursor="SizeWE" HorizontalAlignment="Right" Margin="0,0,-9,0" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="HeaderBorder" Value="#D9EBF9" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="HeaderBorder" Value="#BCDCF4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
        <Setter Property="Width" Value="18" />
        <Setter Property="Background" Value="#E5E5E5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                        <Rectangle HorizontalAlignment="Center" Width="1" Fill="{TemplateBinding Background}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="#E5E5E5" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="2,0,2,0" />
        <Setter Property="Foreground" Value="#4C607A" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid SnapsToDevicePixels="true">
                        <Border x:Name="HeaderBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,1" Background="{TemplateBinding Background}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="7" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Border Padding="{TemplateBinding Padding}" Grid.RowSpan="2">
                                    <ContentPresenter x:Name="HeaderContent" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,0,0,1"
                                      RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                            </Grid>
                        </Border>
                        <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripper}" HorizontalAlignment="Right" Margin="0,0,-9,0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="HeaderBorder" Value="#D9EBF9" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="HeaderBorder" Value="#BCDCF4" />
                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="20" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role" Value="Floating">
                <Setter Property="Opacity" Value="0.4082" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Canvas x:Name="PART_FloatingHeaderCanvas">
                                <Rectangle Fill="#FF000000" Height="{TemplateBinding ActualHeight}" Opacity="0.4697" Width="{TemplateBinding ActualWidth}" />
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role" Value="Padding">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Border x:Name="HeaderBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,0,1" Background="{TemplateBinding Background}" />
                            <ControlTemplate.Triggers>
                                <Trigger Property="Height" Value="Auto">
                                    <Setter Property="MinHeight" Value="20" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AtlassianLogo" TargetType="{x:Type Image}" BasedOn="{StaticResource Image}">
        <Setter Property="Source" Value="/Bitbucket.Authentication;Component/Assets/atlassian-rgb-navy-medium.png" />
        <Setter Property="Width" Value="200" />
        <Setter Property="Stretch" Value="Uniform" />
    </Style>
    <Style x:Key="BitbucketLogo" TargetType="{x:Type Image}" BasedOn="{StaticResource Image}">
        <Setter Property="Source" Value="/Bitbucket.Authentication;Component/Assets/bitbucket_rgb_blue.png" />
        <Setter Property="Width" Value="150" />
        <Setter Property="Stretch" Value="Uniform" />
    </Style>
    <Style x:Key="SourceTreeLogo" TargetType="{x:Type Image}" BasedOn="{StaticResource Image}">
        <Setter Property="Source" Value="/Bitbucket.Authentication;Component/Assets/sourcetree_rgb_blue.png" />
        <Setter Property="Width" Value="150" />
        <Setter Property="Stretch" Value="Uniform" />
    </Style>
</ResourceDictionary>
